name: ci

# Check out https://help.github.com/en/articles/workflow-syntax-for-github-actions for documentation on Actions.
on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # FIXME: Replace with JVM/Scala cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      # FIXME: Scala equivalent?
      - run: cargo check --all

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # FIXME: Scala equivalent?
      - run: cargo fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # FIXME: Replace with JVM/Scala cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sbt test

  # Generate a static build artifact for usage in deployments.
  assets:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # FIXME: Replace with JVM/Scala cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-release

      - run: |
          npm run build

      # NOTE: Artifacts are not available across workflows.
      # FIXME: Replace standalone GraalVM executable.
      - uses: actions/upload-artifact@v2
        with:
          name: bootstrap
          path: ./target/cdk/release/bootstrap
          if-no-files-found: error

  # Validate our deployment setup by deploying the stack to LocalStack.
  localstack:
    runs-on: ubuntu-latest
    needs: [assets]
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: serverless,cloudformation,iam,sts,sqs,ssm,s3,cloudwatch,cloudwatch-logs,lambda,dynamodb,apigateway
          DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: localkey
          AWS_SECRET_ACCESS_KEY: localsecret
        ports:
          - 4566:4566
          - 4571:4571
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js 14.12.0
        uses: actions/setup-node@v1
        with:
          node-version: "14.12.0"

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - name: Upgrade NPM to 6.14.8
        run: |
          npm i -g npm@6.14.8

      - name: "Install dependencies"
        run: |
          npm ci

      # FIXME: Replace standalone GraalVM executable.
      - uses: actions/download-artifact@v2
        with:
          name: bootstrap
          path: ./target/cdk/release

      - name: Bootstrapping LocalStack
        run: |
          npm run cdklocal:bootstrap
        env:
          DEFAULT_REGION: eu-west-1
          AWS_ACCOUNT_ID: "000000000000"
          AWS_ACCESS_KEY_ID: localkey
          AWS_SECRET_ACCESS_KEY: localsecret

      - name: Deploying to LocalStack
        run: |
          npm run cdklocal:deploy
        env:
          DEFAULT_REGION: eu-west-1
          AWS_ACCOUNT_ID: "000000000000"
          AWS_ACCESS_KEY_ID: localkey
          AWS_SECRET_ACCESS_KEY: localsecret
