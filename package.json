{
  "name": "sls-scala-minimal",
  "description": "Deployment tools for the minimal Serverless Scala application.",
  "version": "0.1.0",
  "author": "Christian Kjaer <ckl@codetalk.io>",
  "license": "MIT",
  "keywords": [
    "serverless",
    "scala",
    "aws",
    "cdk"
  ],
  "scripts": {
    "build": "npm run build:scala && npm run build:docker && npm run build:native",
    "build:scala": "sbt clean assembly",
    "build:docker": "docker build -t sls-graalvm-build .",
    "build:native": "mkdir -p dist/META-INF && docker run -v \"$(pwd -P)/target/scala-2.13\":/tmp/sls-graalvm-target -v \"$(pwd -P)/dist\":/tmp/sls-graalvm-dist sls-graalvm-build",
    "build:meta-inf": "npm run build:native -- java -agentlib:native-image-agent=config-output-dir=/tmp/sls-graalvm-dist/META-INF/native-image -jar /tmp/sls-graalvm-target/bootstrap.jar",
    "build:archive": "(cd ./dist/ && zip ./lambda.zip ./bootstrap) && mv ./dist/lambda.zip ./lambda.zip",
    "build:clean": "(rm target/scala-*/bootstrap.jar && rm -f dist/bootstrap) || echo '[build:clean] No existing release found.'",
    "deploy": "npm run build:clean && npm run build:clean && npm run build && npm run cdk:deploy",
    "benchmark": "export BENCHMARK_SUFFIX=${BENCHMARK_SUFFIX-$RANDOM}; npm run benchmark:setup && ts-node -- ./benchmark/benchmark.ts && npm run benchmark:destroy",
    "benchmark:setup": "[[ $DRY_RUN != 'true' ]] && CI=true npm run deploy || echo 'Dry run, skipping deploy.'",
    "benchmark:destroy": "[[ $BENCHMARK_SUFFIX != '' && $DRY_RUN != 'true' ]] &&  cdk destroy --force '*' || echo 'Dry run, skipping teardown.'",
    "cdk:synth": "cdk synth",
    "cdk:diff": "cdk diff",
    "cdk:deploy": "[[ $CI == 'true' ]] && export CDK_APPROVAL='never' || export CDK_APPROVAL='broadening'; cdk deploy --require-approval $CDK_APPROVAL '*'",
    "cdk:bootstrap": "cdk bootstrap aws://$(aws sts get-caller-identity | jq -r .Account)/$AWS_REGION",
    "cdklocal:start": "docker-compose up",
    "cdklocal:clear-cache": "(rm ~/.cdk/cache/accounts.json || true) && (rm ~/.cdk/cache/accounts_partitions.json || true)",
    "cdklocal:deploy": "npm run --silent cdklocal:clear-cache && CDK_LOCAL=true AWS_REGION=eu-west-1 cdklocal deploy --require-approval never '*'",
    "cdklocal:bootstrap": "npm run --silent cdklocal:clear-cache && CDK_LOCAL=true AWS_REGION=eu-west-1 cdklocal bootstrap aws://000000000000/eu-west-1",
    "ts-node": "ts-node"
  },
  "dependencies": {},
  "devDependencies": {
    "@aws-cdk/assert": "1.81.0",
    "@aws-cdk/aws-lambda": "1.81.0",
    "@aws-cdk/aws-s3": "1.81.0",
    "@aws-cdk/core": "1.81.0",
    "@aws-sdk/client-lambda": "^3.1.0",
    "@aws-sdk/client-xray": "^3.1.0",
    "@types/node": "14.11.2",
    "aws-cdk": "1.81.0",
    "aws-cdk-local": "1.65.2",
    "svg-chartist": "^1.0.1",
    "ts-node": "9.1.1",
    "tsconfig-paths": "3.9.0",
    "typescript": "4.1.3"
  },
  "prettier": {
    "printWidth": 120
  }
}
